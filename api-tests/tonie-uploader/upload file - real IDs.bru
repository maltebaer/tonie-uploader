meta {
  name: upload file - with real IDs
  type: http
  seq: 6
}

post {
  url: {{baseUrl}}/api/upload-file
  body: multipartForm
  auth: none
}

pre-request {
  // First get households to find a real Creative-Tonie ID
  const householdsResponse = await bru.runRequest("households");

  if (householdsResponse.status === 200) {
    const households = householdsResponse.body.households || [];

    if (households.length > 0) {
      const household = households[0];
      const creativetonies = household.creativetonies || [];

      if (creativetonies.length > 0) {
        const creativetonie = creativetonies[0];
        bru.setVar("realTonieId", `${household.id}/${creativetonie.id}`);
        bru.setVar("tonieName", creativetonie.name);
        console.log(`Using Creative-Tonie: ${creativetonie.name} (${household.id}/${creativetonie.id})`);
      } else {
        throw new Error("No Creative-Tonies found in household");
      }
    } else {
      throw new Error("No households found");
    }
  } else {
    throw new Error(`Failed to get households: ${householdsResponse.status}`);
  }
}

body:multipart-form {
  appPassword: {{appPassword}}
  tonieId: {{realTonieId}}
  title: Test Upload - {{$timestamp}}
  file: @file(./test-audio.wav)
}

tests {
  test("should upload file successfully", function() {
    expect(res.getStatus()).to.equal(200);
    expect(res.getBody()).to.have.property('success', true);
    expect(res.getBody()).to.have.property('fileId');
    expect(res.getBody()).to.have.property('message');
  });

  test("should contain upload details", function() {
    const body = res.getBody();
    expect(body.message).to.include('Test Upload');
    expect(body).to.have.property('chapterData');
    expect(body).to.have.property('timestamp');
  });

  test("should have used real Tonie ID", function() {
    const realTonieId = bru.getVar("realTonieId");
    expect(realTonieId).to.be.a('string');
    expect(realTonieId).to.include('/');
    console.log(`Successfully uploaded to: ${bru.getVar("tonieName")} (${realTonieId})`);
  });
}
